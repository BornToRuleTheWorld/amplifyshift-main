# Generated by Django 4.2.11 on 2025-06-26 06:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('modules', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Professional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('prof_first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_email', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_address', models.CharField(blank=True, max_length=255, null=True)),
                ('prof_address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('prof_city', models.CharField(blank=True, max_length=255, null=True)),
                ('prof_state', models.IntegerField(blank=True, null=True)),
                ('prof_cntry', models.IntegerField(blank=True, null=True)),
                ('prof_contact', models.CharField(blank=True, max_length=255, null=True)),
                ('prof_ein_number', models.IntegerField(blank=True, null=True)),
                ('prof_years_in', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_zip_primary', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_zip_secondary', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_weekly_aval', models.CharField(blank=True, max_length=255, null=True)),
                ('prof_license', models.CharField(blank=True, max_length=255, null=True)),
                ('prof_lic_state', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_npi', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_status', models.CharField(blank=True, choices=[('Waiting for Confirmation', 'Waiting for Confirmation'), ('Waiting for Referral Approval', 'Waiting for Referral Approval'), ('Active', 'Active'), ('Inactive', 'Inactive')], max_length=100, null=True)),
                ('prof_activated_on', models.DateTimeField(blank=True, null=True)),
                ('prof_ref_verify', models.CharField(blank=True, choices=[('New', 'New'), ('Open', 'Open'), ('Closed', 'Closed')], max_length=100, null=True)),
                ('prof_ref_verified_on', models.DateTimeField(blank=True, null=True)),
                ('prof_photo', models.FileField(blank=True, null=True, upload_to='uploads/professional/photo')),
                ('prof_lic_issued', models.DateField(blank=True, null=True)),
                ('prof_lic_expired', models.DateField(blank=True, null=True)),
                ('prof_lic_status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], max_length=100, null=True)),
                ('prof_linkedin', models.URLField(blank=True, max_length=255, null=True)),
                ('prof_address_zip', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_social_security_num', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_home_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_alt_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_dob', models.DateField(blank=True, null=True)),
                ('prof_address_years', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_address_months', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_prev_address', models.CharField(blank=True, max_length=255, null=True)),
                ('prof_prev_address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('prof_prev_city', models.CharField(blank=True, max_length=255, null=True)),
                ('prof_prev_state', models.IntegerField(blank=True, null=True)),
                ('prof_prev_cntry', models.IntegerField(blank=True, null=True)),
                ('prof_bill_address', models.CharField(blank=True, max_length=255, null=True)),
                ('prof_bill_address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('prof_bill_city', models.CharField(blank=True, max_length=255, null=True)),
                ('prof_bill_state', models.IntegerField(blank=True, null=True)),
                ('prof_bill_cntry', models.IntegerField(blank=True, null=True)),
                ('prof_is_eligible', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_proof_front', models.FileField(blank=True, null=True, upload_to='uploads/professional/proof')),
                ('prof_proof_back', models.FileField(blank=True, null=True, upload_to='uploads/professional/proof_back')),
                ('prof_citizenship_status', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_alias_name', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_uscis_number', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_admission_number', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_passport_insurance', models.CharField(blank=True, max_length=100, null=True)),
                ('prof_discipline', models.ManyToManyField(to='modules.discipline')),
                ('prof_doc_soft', models.ManyToManyField(to='modules.docsoftware')),
                ('prof_langs', models.ManyToManyField(to='modules.languages')),
                ('prof_speciality', models.ManyToManyField(to='modules.speciality')),
                ('prof_work_settings', models.ManyToManyField(to='modules.worksettingexp')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Professional',
                'verbose_name_plural': 'Professionals',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalDocSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('setting_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_expired', models.BooleanField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Professional DocSetting',
                'verbose_name_plural': 'Professional DocSettings',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalReferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('relationship', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('zipcode', models.IntegerField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professional')),
            ],
            options={
                'verbose_name': 'Professional reference',
                'verbose_name_plural': 'Professional references',
            },
        ),
        migrations.CreateModel(
            name='ReferenceMail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('message', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('Mail Sent', 'Mail Sent'), ('Answered', 'Answered')], max_length=100, null=True)),
                ('mail_sent_on', models.DateTimeField(blank=True, null=True)),
                ('completed_on', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professionalreferences')),
            ],
            options={
                'verbose_name': 'Reference Mail',
                'verbose_name_plural': 'Reference Mails',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalVerifyQA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('answer', models.CharField(blank=True, max_length=255, null=True)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professional')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modules.userverificationqa')),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professionalreferences')),
            ],
            options={
                'verbose_name': 'Professional Verify QA',
                'verbose_name_plural': 'Professional Verify QAs',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalSlots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Booked', 'Booked'), ('Cancelled', 'Cancelled'), ('Deleted', 'Deleted')], default='Available', max_length=100)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professional')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modules.slots')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Professional slot',
                'verbose_name_plural': 'Professional slots',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalSkills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('typing_speed', models.CharField(blank=True, max_length=100, null=True)),
                ('is_medical_terminology', models.BooleanField(blank=True, null=True)),
                ('office_machines', models.CharField(blank=True, max_length=255, null=True)),
                ('other_skills', models.TextField(blank=True, null=True)),
                ('computer_skills', models.ManyToManyField(to='modules.computerskills')),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professional')),
            ],
            options={
                'verbose_name': 'Professional Skill',
                'verbose_name_plural': 'Professional Skills',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('date', models.DateField(blank=True, null=True)),
                ('hours', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Booked', 'Booked'), ('Cancelled', 'Cancelled'), ('Deleted', 'Deleted')], default='Available', max_length=100)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professional')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Professional hour',
                'verbose_name_plural': 'Professional hours',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('date', models.DateField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professional')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Professional Event',
                'verbose_name_plural': 'Professional Events',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('doc_file', models.FileField(blank=True, max_length=300, null=True, upload_to='')),
                ('doc_expire_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Inactive', max_length=20, null=True)),
                ('prof_doc_setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professionaldocsetting')),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professional')),
            ],
            options={
                'verbose_name': 'Professional ProfessionlDocument',
                'verbose_name_plural': 'Professional ProfessionalDocuments',
            },
        ),
        migrations.CreateModel(
            name='LicenseCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('license_name', models.CharField(blank=True, max_length=100, null=True)),
                ('license_number', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('expired_on', models.DateField(blank=True, null=True)),
                ('license_file', models.FileField(blank=True, null=True, upload_to='uploads/professional/license')),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], max_length=100, null=True)),
                ('is_verified', models.CharField(blank=True, choices=[('Verified', 'Verified'), ('Not Verified', 'Not Verified')], default='Not Verified', max_length=100, null=True)),
                ('discipline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='modules.discipline')),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professional')),
            ],
            options={
                'verbose_name': 'License certificate',
                'verbose_name_plural': 'License certificates',
            },
        ),
        migrations.CreateModel(
            name='EmployeeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('supervisor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('address_1', models.CharField(blank=True, max_length=100, null=True)),
                ('address_2', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=100, null=True)),
                ('contact', models.CharField(blank=True, max_length=100, null=True)),
                ('pay', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('position_duties', models.TextField(blank=True, null=True)),
                ('resign_reason', models.TextField(blank=True, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modules.country')),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professional')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modules.state')),
            ],
            options={
                'verbose_name': 'Employee History',
                'verbose_name_plural': 'Employee Histories',
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, choices=[('Primary', 'Primary'), ('Alternate', 'Alternate')], max_length=100, null=True)),
                ('relationship', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('zipcode', models.IntegerField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('alt_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professional')),
            ],
            options={
                'verbose_name': 'Emergency contact',
                'verbose_name_plural': 'Emergency contacts',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(blank=True, choices=[('High School or G.E.D', 'High School or G.E.D'), ('Vocational School', 'Vocational School'), ('College', 'College '), ('Other', 'Other')], max_length=100, null=True)),
                ('course_name', models.CharField(blank=True, max_length=100, null=True)),
                ('attended_month', models.CharField(blank=True, max_length=100, null=True)),
                ('attended_year', models.CharField(blank=True, max_length=100, null=True)),
                ('last_grade', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('is_completed', models.BooleanField(blank=True, null=True)),
                ('date_completed', models.DateField(blank=True, null=True)),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='uploads/professional/education')),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professional')),
            ],
            options={
                'verbose_name': 'Education',
                'verbose_name_plural': 'Educations',
            },
        ),
        migrations.CreateModel(
            name='Certifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('certificate_name', models.CharField(blank=True, max_length=100, null=True)),
                ('certificate_date', models.DateField(blank=True, null=True)),
                ('cert_exp_date', models.DateField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='uploads/professional/certificate')),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='professional.professional')),
            ],
            options={
                'verbose_name': 'Certificate',
                'verbose_name_plural': 'Certificates',
            },
        ),
    ]
